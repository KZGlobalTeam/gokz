name: CI

env:
  SM_VERSION: "1.11"

on:
  push:
    branches: [ master, dev ]
    tags: [ '*' ]
  pull_request:
    branches: [ master, dev ]

  # Allows this workflow to be run manually from the Actions tab
  workflow_dispatch:

jobs:
  build:    
    runs-on: ubuntu-20.04
    
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      
      - name: version
        run: echo "GOKZ_VERSION=$(git describe --tags --exact-match 2> /dev/null || git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: compile
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y wget libc6:i386 lib32stdc++6 zip
          mkdir sm
          cd sm
          wget -q -O - "http://sourcemod.net/latest.php?os=linux&version=${{env.SM_VERSION}}" | tar x -zf -
          cp -r ../addons .
          cd ./addons/sourcemod/scripting
          echo "#define GOKZ_VERSION \"${GOKZ_VERSION}\"" > include/gokz/version.inc
          for file in gokz-*.sp; do ./spcomp $file; done;
          cd ../../../../
          mkdir -p addons/sourcemod/plugins
          mv sm/addons/sourcemod/scripting/gokz-*.smx addons/sourcemod/plugins
          
      - name: upload-full
        uses: actions/upload-artifact@v2
        with:
          name: GOKZ-v${{ env.GOKZ_VERSION }}
          path: |
            .
            !sm*
            !*.md
            !.github*
            !.git*
            !LICENSE
            !addons/sourcemod/scripting*
            !*.zip
            !*.fgd
          
      - name: upload-upgrade
        uses: actions/upload-artifact@v2
        with:
          name: GOKZ-v${{ env.GOKZ_VERSION }}-upgrade
          path: |
            .
            !sm*
            !*.md
            !.github*
            !.git*
            !LICENSE
            !addons/sourcemod/scripting*
            !cfg*
            !*.zip
            !*.fgd
